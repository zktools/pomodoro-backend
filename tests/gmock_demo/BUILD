load("@rules_cc//cc:defs.bzl", "cc_test")

cc_test(
    name = "on_call",
    srcs = ["on_call.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call",
    srcs = ["expect_call.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call_matchers",
    srcs = ["expect_call_matchers.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call_order",
    srcs = ["expect_call_order.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call_side_effects",
    srcs = ["expect_call_side_effects.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "nice_mock",
    srcs = ["nice_mock.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call_return",
    srcs = ["//tests/gmock_demo:expect_call_return.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call_invoke",
    srcs = ["expect_call_invoke.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call_checkpoint",
    srcs = ["expect_call_checkpoint.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call_sticky_rules",
    srcs = ["expect_call_sticky_rules.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "mock_non_virtual_classes",
    srcs = ["mock_non_virtual_classes.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "mock_non_virtual_classes_non_pointer",
    srcs = ["mock_non_virtual_classes_non_pointer.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)


cc_test(
    name = "matchers",
    srcs = ["matchers.cc"],
    deps = [
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "mocking_free_function",
    srcs = ["mocking_free_function.cc"],
    deps = [
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "delegate_to_fake",
    srcs = ["delegate_to_fake.cc"],
    deps = [
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "unspecified",
    srcs = ["unspecified.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call_cardinality",
    srcs = ["expect_call_cardinality.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "mocking_free_function_example",
    srcs = ["mocking_free_function_example.cc"],
    deps = [
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call_dodefault",
    srcs = ["expect_call_dodefault.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_test(
    name = "first_example",
    srcs = ["first_example.cc"],
    deps = [
        "//tests/gmock_demo/bankserver:BankServerLib",
        "@com_google_googletest//:gtest_main",
    ],
)
